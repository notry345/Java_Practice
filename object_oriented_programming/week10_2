#Practice 7-1
import java.util.Vector;
public class VectorEx {
	public static void main(String[] args) {
		//정수 값만 다루는 제네릭 벡터 생성
		Vector <Integer> v = new Vector <Integer>();
		v.add(5); //5 삽입
		v.add(4); //4 삽입
		v.add(-1); //-1 삽입
		//벡터 중간에 삽입하기
		v.add(2,100); //4와 -1 사이에 정수 100 삽입
		System.out.println("벡터 내의 요소 객체 수 : "+v.size());
		System.out.println("벡터의 현재 용량 : "+v.capacity());
		//모든 요소 정수 출력하기
		for(int i=0; i<v.size(); i++) {
			int n = v.get(i);
			System.out.println(n);
		}
		//벡터 속의 모든 정수 더하기
		int sum = 0;
		for(int i=0; i<v.size(); i++) {
			int n = v.elementAt(i);
			sum += n;
		}
		System.out.println("벡터에 있는정수 합 : "+sum);
	}
}

#Practice 7-2
import java.util.Vector;
class Point{
	private int x,y;
	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}
	public String toString() {
		return "("+x+","+y+")";
	}
}
public class PointVectorEx {
	public static void main(String[] args) {
		//Point 객체를 요소로만 가지는 벡터 생성
		Vector<Point> v = new Vector<Point>();
		//3개의 Point 객체 삽입
		v.add(new Point(2, 3));
		v.add(new Point(-5, 20));
		v.add(new Point(30, -8));
		v.remove(1); //인덱스 1의 Point(-5, 20) 객체 삭제
		//벡터에 있는 Point 객체 모두 검색하여 출력
		for(int i=0; i<v.size(); i++) {
			Point p = v.get(i); //벡터에서 i번째 Point 객체 얻어내기
			System.out.println(p); //p.toString()을 이용하여 객체 p 출력
		}
	}
}
